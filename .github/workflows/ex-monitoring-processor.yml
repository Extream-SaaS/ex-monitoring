  name: Ex-Monitoring-Processor

  on:
    push:
      paths:
        - 'processor/**'
      branches: [ master ]

  defaults:
    run:
      working-directory: processor

  jobs:
    buildExMonitoring:
      name: Build ex-monitoring-processor
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [12.x]

      steps:
        - uses: actions/checkout@v2
        - name: Use Node.js ${{ matrix.node-version }}
          id: Build
          uses: actions/setup-node@v1.4.3
          with:
            node-version: ${{ matrix.node-version }}
        - run: npm ci
        - run: npm run build --if-present
        - name: Test
          id: Test
          run: npm test

        - uses: act10ns/slack@v1
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          with:
            status: ${{ job.status }}
            steps: ${{ toJson(steps) }}
          if: always()


    deployExMonitoring:
      name: Deploy ex-monitoring-processor
      runs-on: ubuntu-latest
      needs: [buildExMonitoring]
      steps:
        - uses: actions/checkout@v2

        - name: Create variables.yaml
          id: Create-Environment-Variables
          uses: microsoft/variable-substitution@v1
          with:
            files: 'variables.yaml'
          env:
            GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
            AUTHORIZATION_HEADER: ${{ secrets.AUTHORIZATION_HEADER }}

        - name: Deploy to GCP
          id: Deploy
          uses: actions-hub/gcloud@307.0.0
          env:
            PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
            APPLICATION_CREDENTIALS: ${{secrets.GCLOUD_CREDENTIALS}}
          with:
            args: functions deploy monitoring-processor --region europe-west2  --runtime nodejs12 --source processor --entry-point processMessages --env-vars-file variables.yaml --trigger-http --allow-unauthenticated

        - uses: act10ns/slack@v1
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          with:
            status: ${{ job.status }}
            steps: ${{ toJson(steps) }}
          if: always()
